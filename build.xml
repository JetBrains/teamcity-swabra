<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="swabra-custom" basedir="." default="all">



  <property file="build.properties"/>
  <property name="javac2.home" value="${basedir}/lib-compile"/>
  <import file="${basedir}/swabra.xml"/>

  <property name="plugin.name" value="swabra"/>

  <import file="${basedir}/teamcity-common.xml"/>

  <property environment="env"/>

  <target name="all" depends="check.teamcitydistribution, swabra.all"/>

  <target name="define.version" depends="define.version.if.under.teamcity">
    <tstamp>
      <format property="current.time" pattern="yyyyMMddHHmm"/>
    </tstamp>
    <property name="plugin.version" value="SNAPSHOT-${current.time}"/>
  </target>

  <target name="define.version.if.under.teamcity" if="build.number">
    <property name="plugin.version" value="${build.number}"/>
  </target>

  <target name="dist" depends="all, define.version">
    <delete dir="dist" quiet="true"/>
    <package.teamcity.plugin name="${plugin.name}" server.output="${server.output.dir}"
                             agent.output="${agent.output.dir}"
                             common.output="${common.output.dir}"
                             out="dist"
                             plugin.descriptor.file="${basedir}/teamcity-plugin.xml"
                             plugin.version="${plugin.version}">
      <dsl-descriptions>
        <fileset file="${basedir}/server/Swabra.xml"/>
      </dsl-descriptions>
    </package.teamcity.plugin>
  </target>

  <target name="deploy" depends="dist" description="deploy plugin to TeamCity">
    <deploy.teamcity.plugin name="${plugin.name}"/>
  </target>


  <target name="copy.log4j.configuration">
    <property name="tests.testdata" value="${basedir}/tests/testData"/>
    <copy todir="${tests.testoutput.dir}" file="${tests.testdata}/log4j.xml"/>
  </target>

  <!--<target name="prepare.test.data">-->
  <!--<property name="test.data.dir" value="${basedir}/tests/testData/findBugs"/>-->

  <!--<xslt basedir="${test.data.dir}" destdir="${test.data.dir}"-->
  <!--includes="*.sample.xml" extension=".trans" style="reportPaths.xsl">-->
  <!--<param name="path" expression="${basedir}"/>-->
  <!--</xslt>-->
  <!--<move todir="${test.data.dir}" includeemptydirs="false">-->
  <!--<fileset dir="${test.data.dir}">-->
  <!--<include name="*.trans"/>-->
  <!--</fileset>-->
  <!--<mapper type="glob" from="*.sample.trans" to="*.xml"/>-->
  <!--</move>-->

  <!--<delete>-->
  <!--<fileset dir="${test.data.dir}" includes="*.sample.trans"/>-->
  <!--</delete>-->
  <!--</target>-->

  <target name="test" depends="test-nofail"/>

  <target name="test-nofail">
    <delete dir="test-reports" quiet="true"/>
    <mkdir dir="test-reports"/>

    <antcall target="copy.log4j.configuration"/>
    <!--<antcall target="prepare.test.data"/>-->

    <junit printsummary="on" fork="true" haltonfailure="false" haltonerror="false"
           showoutput="true">
      <classpath>
        <path refid="tests.runtime.module.classpath"/>
      </classpath>

      <formatter type="xml"/>

      <batchtest todir="test-reports">
        <fileset dir="${tests.testoutput.dir}">
          <include name="**/*Test.class"/>
          <exclude name="**/SwabraTest.class"/>
          <exclude name="**/Swabra2Test.class"/>
          <exclude name="**/HandleToolUsageProviderTest.class"/>
        </fileset>
      </batchtest>
    </junit>

    <taskdef resource="testngtasks" classpathref="tests.runtime.module.classpath"/>
    <testng outputdir="${tests.testoutput.dir}"
            classpathref="tests.runtime.module.classpath"
            haltonfailure="false">
      <xmlfileset dir="${basedir}">
        <include name="testng.xml"/>
      </xmlfileset>
    </testng>

  </target>

</project>
